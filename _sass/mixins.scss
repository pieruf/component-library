@mixin break-large {
	@media screen and (min-width:768px) {
		@content;
	}
}

@mixin break-medium {
	@media screen and (min-width:480px){
		@content;
	}
}

@mixin break-small {
	@media screen and (max-width:479px){
		@content;
	}
}

@mixin clearfix {
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin col($num, $tot) {
	box-sizing: border-box;
	padding: 1rem;
	width:100%;
	@if $tot > 5 {
		@include break-medium {
			width: percentage((($tot/2)*$num/$tot));
			float:left;
		}
	}
	@include break-large {
		width: percentage($num/$tot);
		float:left;
	}
}

@mixin filler($color: null, $w: 0, $h: 0, $border-size: 0, $border-color: null) {
	background-color:$color;
	border:$border-size solid $border-color;
	padding-top: 20px;
    padding-bottom: 20px;
}

@mixin button($size: 'medium', $bg-color: #FF4040, $txt-color: #FFFFFF, $disabled: false) {
	text-decoration: none;
	@if ($size == 'small') {
		padding: 3px 10px;
		@include font-size(10);
		@include line-height(30)
		
	} @else if ($size == 'medium') {
		padding: 5px 15px;
		@include font-size(16);
		@include line-height(60)
	} @else if ($size == 'large') {
		padding: 10px 40px;
		@include font-size(24);
		@include line-height(90)
	}
	@if ($disabled == true) {
		cursor: not-allowed;
		background-color:#d2d2d2;
	} @else {
		background-color: $bg-color;
		color: $txt-color;
		&:hover{
			background-color: steelblue;
		}
	}
}

@mixin empty-button ($size: 'medium', $bg-color: transparent, $txt-color: #000000, $disabled: false) {
	@include button($size, $bg-color, $txt-color);
	@if ($disabled == false) {
		color: $txt-color;
		&:hover, &:active {
			background-color: $txt-color;
			color: #ffffff;
		}
	} @else {
		color: #d2d2d2;
		&:hover, &:active {
			background-color: $bg-color;
		}
	}
	border: {
		@if ($disabled == false) {
			color: $txt-color;
		} @else {
			color: #d2d2d2;
		}
		@if ($size == 'small') {
			width: 2px;
		} @else if ($size == 'medium') {
			width: 3px;
		} @else if ($size == 'large') {
			width: 5px;
		}
		style: solid;
	}
}

@mixin link($state: 'default') {
	@if ($state == 'default') {
		color: steelblue;
	} @else if ($state == 'hover') {
		color: magenta;
	} @else if ($state == 'active') {
		color: yellow;
	} @else if ($state == 'visited') {
		color: steelblue;
	}
	text-decoration: underline;
}

@mixin font-size($size) {
	font-size: ($size/10) + rem;
}

@mixin line-height($value) {
	line-height: ($value/10) + rem;
}

@mixin heading($size, $weight: $font-normal) {
	@include font-size($size);
	@include line-height(32);
	font-weight: $weight;
}

@mixin hr($variant: "solid") {
	border-style: unquote($variant);
}

@mixin highlight($type: "normal") {
	@if ($type == "normal") {
		background-color: #FFAD33;
	} @else if ($type == "warning") {
		background-color: #FF3333;
	}
    color: #fff;
    padding: 2px 5px;
}

@mixin ordered-list($variant: 'default') {
	@extend %list;
	list-style-position: inside;
	@if ($variant == 'decimal') {
		list-style-type: decimal-leading-zero;
	} @else if ($variant == 'roman') {
		list-style-type: upper-roman;
	} @else if ($variant == 'letters') {
		list-style-type: upper-latin;
	} @else {
		list-style-type:  decimal;
	}

}

@mixin cross-transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}