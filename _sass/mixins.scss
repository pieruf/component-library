@mixin break-large {
	@media screen and (min-width:768px) {
		@content;
	}
}

@mixin break-medium {
	@media screen and (min-width:480px){
		@content;
	}
}

@mixin break-small {
	@media screen and (max-width:479px){
		@content;
	}
}

@mixin clearfix {
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin col($num, $tot) {
	box-sizing: border-box;
	padding: 1rem;
	width:100%;
	@if $tot > 5 {
		@include break-medium {
			width: percentage((($tot/2)*$num/$tot));
			float:left;
		}
	}
	@include break-large {
		width: percentage($num/$tot);
		float:left;
	}
}

@mixin filler($color: null, $w: 0, $h: 0, $border-size: 0, $border-color: null) {
	background-color:$color;
	border:$border-size solid $border-color;
	padding-top: 20px;
    padding-bottom: 20px;
}

@mixin button($size: 'medium', $bg-color: $color-main, $txt-color: $color-light, $disabled: false) {
	text-decoration: none;
	@if ($size == 'small') {
		padding: 3px 10px;
		@include font-size(10);
		@include line-height(30)
		
	} @else if ($size == 'medium') {
		padding: 5px 15px;
		@include font-size(16);
		@include line-height(60)
	} @else if ($size == 'large') {
		padding: 10px 40px;
		@include font-size(24);
		@include line-height(90)
	}
	@if ($disabled == true) {
		cursor: not-allowed;
		background-color: $color-grey;
	} @else {
		background-color: $bg-color;
		color: $txt-color;
		&:hover{
			background-color: lighten($bg-color, 20%);
		}
	}
}

@mixin empty-button ($size: 'medium', $bg-color: transparent, $txt-color: $color-dark, $disabled: false) {
	@include button($size, $bg-color, $txt-color);
	@if ($disabled == false) {
		color: $txt-color;
		&:hover, &:active {
			background-color: $txt-color;
			color: $color-light;
		}
	} @else {
		color: $color-grey;
		&:hover, &:active {
			background-color: $bg-color;
		}
	}
	border: {
		@if ($disabled == false) {
			color: $txt-color;
		} @else {
			color: $color-grey;
		}
		@if ($size == 'small') {
			width: 2px;
		} @else if ($size == 'medium') {
			width: 3px;
		} @else if ($size == 'large') {
			width: 5px;
		}
		style: solid;
	}
}

@mixin link($state) {
	color: $color-main;
	@if ($state == 'hover') {
		color: $color-confirm;
	} @else if ($state == 'active') {
		color: $color-confirm;
	} @else if ($state == 'visited') {
		color: $color-main;
	}
	text-decoration: underline;
}

@mixin font-size($size) {
	font-size: ($size/10) + rem;
}

@mixin line-height($value) {
	line-height: ($value/10) + rem;
}

@mixin heading($size, $weight: $font-normal) {
	@include font-size($size);
	@include line-height(32);
	font-weight: $weight;
}

@mixin hr($variant: "solid") {
	border-style: unquote($variant);
}

@mixin highlight($type: "normal") {
	@if ($type == "normal") {
		background-color: $color-confirm;
	} @else if ($type == "warning") {
		background-color: $color-warn;
	}
    color: #fff;
    padding: 2px 5px;
}

@mixin ordered-list($variant: 'default') {
	@extend %list;
	list-style-position: inside;
	@if ($variant == 'decimal') {
		list-style-type: decimal-leading-zero;
	} @else if ($variant == 'roman') {
		list-style-type: upper-roman;
	} @else if ($variant == 'letters') {
		list-style-type: upper-latin;
	} @else {
		list-style-type:  decimal;
	}

}

@mixin table($table-color, $variant: 'default') {
	width: 100%;
	float: left;
	margin-top: 2rem;
	thead {
		th {
			background: $table-color;
		    color: $color-light;
		    font-weight: 900;
		    @include line-height(32);
		    text-align: left;
		    padding-left: 1rem;
		}	
	}
	tbody {
		border-bottom: 3px solid darken($table-color, 10%);
		tr {
			border-bottom: 1px solid $color-grey;
			th {
				text-align: left;
				padding: 1rem 0 1rem 1rem;
			}
			td {
				padding: 1rem 0 1rem 1rem;
			}
			@if ($variant == 'striped') {
				&:nth-child(even) {
					background-color: lighten($table-color, 33%);
				}
			}
			@if ($variant == 'hover') {
				&:hover {
					background-color: lighten($table-color, 33%);
				}
			}
		}
	}
}

@mixin description-list($term-space: 150px) {
	dt {
		@extend %list;
		font-weight: $font-bold;
		float: left;
	    width: $term-space;
	    text-overflow: ellipsis;
	    text-align: right;
	    margin-right: 10px;
	}
	
	dd {
		@extend %list;
		margin-left: $term-space+10px;
	}
}

@mixin form-element() {
	box-sizing: border-box;
    width: 100%;
    padding: 10px 10px;
    margin: 10px 0;
    @include font-size(16);
    @include line-height(16);
    color: $color-dark;
    background-color: $color-light;
    border: 1px solid $color-grey;
    border-radius: 5px;
    @include transition(border-color ease-in-out .10s, -webkit-box-shadow ease-in-out .10s);
    @include transition(border-color ease-in-out .10s, box-shadow ease-in-out .10s);
    &:focus {
	    outline: $color-main;
	    @include box-shadow(0 0 5px $color-main);
	    border: 1px solid $color-main;
    }
}

@mixin box-shadow($args...) {
	-webkit-box-shadow: $args;
	box-shadow: $args;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}